// Define the MongoDB datasource using an environment variable for the URL
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Generate the Prisma client
generator client {
  provider = "prisma-client-js"
}

// Define the User model with various fields, including a unique email and timestamps for creation and updates
model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  username      String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Define the Account model to store authentication-related information with a relation to the User model
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

// Define the Session model for storing session tokens with a relation to the User model
model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Define the VerificationToken model for storing verification tokens
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}
